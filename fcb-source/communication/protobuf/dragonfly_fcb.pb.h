/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3 at Sat Sep 12 14:17:07 2015. */

#ifndef PB_DRAGONFLY_FCB_PB_H_INCLUDED
#define PB_DRAGONFLY_FCB_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _ControlReferenceSignalsProto {
    bool has_refVx;
    float refVx;
    bool has_refVy;
    float refVy;
    bool has_refVz;
    float refVz;
    bool has_refRoll;
    float refRoll;
    bool has_refPitch;
    float refPitch;
    bool has_refYaw;
    float refYaw;
    bool has_refYawRate;
    float refYawRate;
} ControlReferenceSignalsProto;

typedef struct _FlightStatesProto {
    bool has_posX;
    float posX;
    bool has_posY;
    float posY;
    bool has_posZ;
    float posZ;
    bool has_velX;
    float velX;
    bool has_velY;
    float velY;
    bool has_velZ;
    float velZ;
    bool has_angRoll;
    float angRoll;
    bool has_angPitch;
    float angPitch;
    bool has_angYaw;
    float angYaw;
    bool has_rateRoll;
    float rateRoll;
    bool has_ratePitch;
    float ratePitch;
    bool has_rateYaw;
    float rateYaw;
} FlightStatesProto;

typedef struct _MotorSignalValuesProto {
    bool has_M1;
    int32_t M1;
    bool has_M2;
    int32_t M2;
    bool has_M3;
    int32_t M3;
    bool has_M4;
    int32_t M4;
} MotorSignalValuesProto;

typedef struct _PIDControlParamsProto {
    bool has_K_vxy;
    float K_vxy;
    bool has_Ti_vxy;
    float Ti_vxy;
    bool has_Td_vxy;
    float Td_vxy;
    bool has_K_vz;
    float K_vz;
    bool has_Ti_vz;
    float Ti_vz;
    bool has_Td_vz;
    float Td_vz;
    bool has_K_rollpitch;
    float K_rollpitch;
    bool has_Ti_rollpitch;
    float Ti_rollpitch;
    bool has_Td_rollpitch;
    float Td_rollpitch;
    bool has_K_yawrate;
    float K_yawrate;
    bool has_Ti_yawrate;
    float Ti_yawrate;
    bool has_Td_yawrate;
    float Td_yawrate;
} PIDControlParamsProto;

typedef struct _ReceiverSignalValuesProto {
    bool has_throttle;
    int32_t throttle;
    bool has_aileron;
    int32_t aileron;
    bool has_elevator;
    int32_t elevator;
    bool has_rudder;
    int32_t rudder;
    bool has_gear;
    int32_t gear;
    bool has_aux1;
    int32_t aux1;
} ReceiverSignalValuesProto;

typedef struct _SensorSamplesProto {
    bool has_gyroAngRateXb;
    float gyroAngRateXb;
    bool has_gyroAngRateYb;
    float gyroAngRateYb;
    bool has_gyroAngRateZb;
    float gyroAngRateZb;
    bool has_accX;
    float accX;
    bool has_accY;
    float accY;
    bool has_accZ;
    float accZ;
    bool has_magX;
    float magX;
    bool has_magY;
    float magY;
    bool has_magZ;
    float magZ;
} SensorSamplesProto;

typedef struct _SimulatedStatesProto {
    bool has_posX;
    float posX;
    bool has_posY;
    float posY;
    bool has_posZ;
    float posZ;
    bool has_velX;
    float velX;
    bool has_velY;
    float velY;
    bool has_velZ;
    float velZ;
    bool has_angRoll;
    float angRoll;
    bool has_angPitch;
    float angPitch;
    bool has_angYaw;
    float angYaw;
    bool has_rateRoll;
    float rateRoll;
    bool has_ratePitch;
    float ratePitch;
    bool has_rateYaw;
    float rateYaw;
} SimulatedStatesProto;

/* Default values for struct fields */

/* Initializer values for message structs */
#define ReceiverSignalValuesProto_init_default   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define MotorSignalValuesProto_init_default      {false, 0, false, 0, false, 0, false, 0}
#define SensorSamplesProto_init_default          {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define FlightStatesProto_init_default           {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define PIDControlParamsProto_init_default       {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define ControlReferenceSignalsProto_init_default {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define SimulatedStatesProto_init_default        {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define ReceiverSignalValuesProto_init_zero      {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define MotorSignalValuesProto_init_zero         {false, 0, false, 0, false, 0, false, 0}
#define SensorSamplesProto_init_zero             {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define FlightStatesProto_init_zero              {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define PIDControlParamsProto_init_zero          {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define ControlReferenceSignalsProto_init_zero   {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define SimulatedStatesProto_init_zero           {false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ControlReferenceSignalsProto_refVx_tag   1
#define ControlReferenceSignalsProto_refVy_tag   2
#define ControlReferenceSignalsProto_refVz_tag   3
#define ControlReferenceSignalsProto_refRoll_tag 4
#define ControlReferenceSignalsProto_refPitch_tag 5
#define ControlReferenceSignalsProto_refYaw_tag  6
#define ControlReferenceSignalsProto_refYawRate_tag 7
#define FlightStatesProto_posX_tag               1
#define FlightStatesProto_posY_tag               2
#define FlightStatesProto_posZ_tag               3
#define FlightStatesProto_velX_tag               4
#define FlightStatesProto_velY_tag               5
#define FlightStatesProto_velZ_tag               6
#define FlightStatesProto_angRoll_tag            7
#define FlightStatesProto_angPitch_tag           8
#define FlightStatesProto_angYaw_tag             9
#define FlightStatesProto_rateRoll_tag           10
#define FlightStatesProto_ratePitch_tag          11
#define FlightStatesProto_rateYaw_tag            12
#define MotorSignalValuesProto_M1_tag            1
#define MotorSignalValuesProto_M2_tag            2
#define MotorSignalValuesProto_M3_tag            3
#define MotorSignalValuesProto_M4_tag            4
#define PIDControlParamsProto_K_vxy_tag          1
#define PIDControlParamsProto_Ti_vxy_tag         2
#define PIDControlParamsProto_Td_vxy_tag         3
#define PIDControlParamsProto_K_vz_tag           4
#define PIDControlParamsProto_Ti_vz_tag          5
#define PIDControlParamsProto_Td_vz_tag          6
#define PIDControlParamsProto_K_rollpitch_tag    7
#define PIDControlParamsProto_Ti_rollpitch_tag   8
#define PIDControlParamsProto_Td_rollpitch_tag   9
#define PIDControlParamsProto_K_yawrate_tag      10
#define PIDControlParamsProto_Ti_yawrate_tag     11
#define PIDControlParamsProto_Td_yawrate_tag     12
#define ReceiverSignalValuesProto_throttle_tag   1
#define ReceiverSignalValuesProto_aileron_tag    2
#define ReceiverSignalValuesProto_elevator_tag   3
#define ReceiverSignalValuesProto_rudder_tag     4
#define ReceiverSignalValuesProto_gear_tag       5
#define ReceiverSignalValuesProto_aux1_tag       6
#define SensorSamplesProto_gyroAngRateXb_tag     1
#define SensorSamplesProto_gyroAngRateYb_tag     2
#define SensorSamplesProto_gyroAngRateZb_tag     3
#define SensorSamplesProto_accX_tag              4
#define SensorSamplesProto_accY_tag              5
#define SensorSamplesProto_accZ_tag              6
#define SensorSamplesProto_magX_tag              7
#define SensorSamplesProto_magY_tag              8
#define SensorSamplesProto_magZ_tag              9
#define SimulatedStatesProto_posX_tag            1
#define SimulatedStatesProto_posY_tag            2
#define SimulatedStatesProto_posZ_tag            3
#define SimulatedStatesProto_velX_tag            4
#define SimulatedStatesProto_velY_tag            5
#define SimulatedStatesProto_velZ_tag            6
#define SimulatedStatesProto_angRoll_tag         7
#define SimulatedStatesProto_angPitch_tag        8
#define SimulatedStatesProto_angYaw_tag          9
#define SimulatedStatesProto_rateRoll_tag        10
#define SimulatedStatesProto_ratePitch_tag       11
#define SimulatedStatesProto_rateYaw_tag         12

/* Struct field encoding specification for nanopb */
extern const pb_field_t ReceiverSignalValuesProto_fields[7];
extern const pb_field_t MotorSignalValuesProto_fields[5];
extern const pb_field_t SensorSamplesProto_fields[10];
extern const pb_field_t FlightStatesProto_fields[13];
extern const pb_field_t PIDControlParamsProto_fields[13];
extern const pb_field_t ControlReferenceSignalsProto_fields[8];
extern const pb_field_t SimulatedStatesProto_fields[13];

/* Maximum encoded size of messages (where known) */
#define ReceiverSignalValuesProto_size           66
#define MotorSignalValuesProto_size              44
#define SensorSamplesProto_size                  45
#define FlightStatesProto_size                   60
#define PIDControlParamsProto_size               60
#define ControlReferenceSignalsProto_size        35
#define SimulatedStatesProto_size                60

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define DRAGONFLY_FCB_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
